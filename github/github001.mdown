# GitHubとは

## GitHubとは
隣の人から地球の裏側の人などなど、  
様々な人とコード共有するために用意されているGitリポジトリの[ホスティングサービス](http://e-words.jp/w/%E3%83%9B%E3%82%B9%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9.html)

GitHubには日頃から使っている[jQueryのGitリポジトリ](https://github.com/jquery/jquery)など、  
有名なフレームワークのGitリポジトリも多くある  
またそれらは公開リポジトリとして公開されているので、  
それらソースが簡単に手に入り触れることが出来る

また、GitHubでは公開されているGitリポジトリに対して、  
修正したソースなどをそのリポジトリ管理者に送信し、  
取り込んでもらうPullRequestという機能がある

これを使うことで、自分がそのプロジェクトの１メンバーになることもすぐ可能となり、  
ソーシャルコーディングが簡単にできる

また自分でGitリポジトリを公開すると、全然知らない人と一緒に開発することが簡単に出来る  
いわゆるオープンソースソフトウェアの世界と同じ開発スタイルで開発できるようになる

### GitとGitHubの違い
 - Git ： Gitリポジトリというデータの入れ物にプログラムソースなどの変更履歴を管理する分散型のバージョン管理システム
 - GitHub ： Gitリポジトリを置く場所をインターネット上に提供しているサービス

### GitHubの主機能

 - Gitリポジトリ
 	- GitHubが提供するリポジトリは基本は無料で何個でも作成できる  
 	  ただし限られた人にだけ見せたい場合は有料となる

 - Organization
 	- アカウントや権限の一括管理したり出来る

 - Issue
 	- 1つのタスクや問題を１つのIssueに割り当てて、トラッキングや管理をするための機能  
 	バグ管理システムのような使い方もできる

 - Wiki
 	- 開発ドキュメントやマニュアルなどが記載できる  

 - Pull Request
 	- GitHubリポジトリにpushした変更や機能追加をほかの人のリポジトリに取り込んでもらうよう要求を出す機能  

## Gitとは
Gitは分散型バージョン管理システムというバージョン管理をするためのソフトウェア  

### バージョン管理とは
バージョン管理とは、変更履歴を管理すること  
具体的には、ソフトウェアのソースコードを変更したり追加した過程を記録していき、  
特定の段階まで戻ったり、間違って消したファイルを復活したりする機能を提供する  

Git登場以前はSubversionなどの集中型バージョン管理システムが主流だったが、  
今は分散型のGitが主流となってきている  

### 集中型バージョン管理と分散型バージョン管理の違い

 - 集中型バージョン管理  
 リポジトリをサーバーに集中させて配置するため、リポジトリは1つしかない  
 データが中央サーバーに集中されるため管理がシンプル  
 ただ、サーバーに接続できないと最新のソースコードが取得できない  
 また、中央サーバーが何かしらで壊れた場合、すべてを失う  
 ![集中型バージョン管理](./images/subversion.jpeg =100x100)

 - 分散型バージョン管理  
 ユーザごとにリポジトリをForkしローカルにそのリポジトリをクローンすることで、  
 自分専用リポジトリがローカルに作れるので、 何も気にせず自由にコミットができる  
 また、バージョン管理対象情報(ファイルや履歴)をすべてローカルにコピーするため、  
 仮にリモートサーバが壊れたとしても、ローカルリポジトリをサーバーにコピーすれば復活する
 ![分散型バージョン管理](./images/git.jpeg)
	- 用語
 		- pull : リモートリポジトリの変更を取り込む
 		- push : リモートリポジトリに変更を書き込む
 		- fork : 自分のアカウント内に既存のリポジトリを複製
 		- clone : Gitリポジトリをローカルにコピー
 		- pull request : 変更した内容を相手のリポジトリに取り込んでもらうよう依頼

###　Gitのインストール
Windowsであれば、msysGitを簡単にインストールすることができる  

1. [こちら](http://msysgit.github.io/)からインストーラをダウンロード

2. ダウンロードしたインストーラを実行し、ウィザードに沿っていけばOK

 	- Select Components : そのまま
 	- Adjusting your Path enviroment : "Use Git Bash Only"を選択
 	- Connfiguring the line ending conversions : Windows版でOK

3. インストールが成功すると、Gitコマンドが使えるアプリ"GitBash"がインストールされているので起動

4. 下記コマンドを実行し、バージョンが表示された完了
```
$ git --version
```

#### 初期設定
1,  名前とメールアドレスを設定
```
$ git config --global user.name "名前"
$ git config --global user.email "メールアドレス"
```
※GitHubに登録する名前とメールアドレス

2, 出力を見やすくする設定
```
$ git config --global color.ui auto
```

