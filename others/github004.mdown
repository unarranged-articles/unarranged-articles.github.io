## Gitコマンドチートシート

使ったコマンドを忘れないためのチートシート  
新規コマンドに出会ったら増やしていく予定 :-)


- git init

	カレントディレクトリに.gitディレクトリを作成し、Gitリポジトリを新しく作る

- git clone

	リモートリポジトリを取得する

- git pull

	最新のリモートリポジトリを取得する

- git status

	Gitリポジトリの状態を表示

- git add ファイル名

	対象ファイルをステージ領域(インデックス)に追加

	- git add -all(git add -A)  
	新規追加・削除したファイルもすべてadd

- git commit

	ステージ領域登録されているファイルをGitリポジトリのバージョン管理として登録

	- git -m commit "comment"  
	1行のコミットメッセージを記述

	- git commit --amend  
	直前のコミットコメントを修正

	- git commit -a  
	変更となったファイルを自動検出しコミットする  
	ただし、新規ファイルはコミット対象とならない

- git log

	Gitリポジトリにコミットされたログを確認

	- git log --pretty=short  
	  コミットメッセージの1行目だけを表示する

	- git log ファイル名  
	指定したファイルのログだけを表示

	- git log ディレクトリ  
	指定したディレクトリ以下のログを表示

	- git log -p  
	コミットログと差分を表示

	- git log --graph  
	コミットログをグラフで表示

 - git diff

 	現在のワークツリーとステージ領域の差分を表示

 	- git diff HEAD  
 	ワークツリーとリポジトリの差分を表示

 - git branch

 	ブランチの一覧を表示し、現在のどこのブランチにいるか確認

 	- git branch -a  
 	ローカルリポジトリだけでなく、リモートリポジトリも含んだブランチの状態を表示
 	
 	- git branch ブランチ名  
 	指定したブランチを作成

 	- git branch --delete [ブランチ名]  
 	指定したブランチを削除

 	- git branch -D [ブランチ名]  
 	マージしたかどうか確認なしで指定したブランチを削除

 	
 -	git checkout

 	ブランチの切り替え

 	- git checkout -b ブランチ名  
 	指定したブランチを作成し、作業ブランチをそのブランチに切り替える

 	- git checkout -  
 	ひとつ前にいたブランチに切り替える

 - git merge ブランチ

 	作業ブランチに指定したブランチの情報をマージする

 	- git mearge --ff ブランチ名  
 	指定したブランチに作業ブランチの情報がすべて含まれている場合に付与するオプション  
 	マージコミットはせす、ブランチの参照先の更新だけをする  
 	デフォルトの設定はこれ

 	- git mearge --no-f ブランチ名  
 	指定したブランチに作業ブランチの変更履歴が含まていあに場合に付与するオプション  
 	マージコミットし更新する

 - git remote add 短縮文字　リポジトリURL

 	指定したリモートGitリポジトリURLを短縮文字で指定した名前で登録  
 	これをするとpullやfeachなどで短縮文字でリポジトリURLを指定できる

 	- git remote -v  
 		登録しているリポジトリURLが表示される

 	- git remote rm 短縮文字  
 		指定した短縮文字を削除

 - git reset --hard [コミットログのハッシュ値]

 	ローカルリポジトリ、ステージ、ワーキングツリーを指定した場所まで戻す

　- git reflog

	過去のGitコマンドで行われた変更ログが確認できる  
	ただし、GitのGCが走っていない限り